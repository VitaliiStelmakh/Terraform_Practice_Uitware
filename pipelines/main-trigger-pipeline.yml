trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.3.0' # Specify the Terraform version you are using

steps:
- script: |
    echo "Installing Terraform version $(terraformVersion)..."
    wget https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
    unzip terraform_$(terraformVersion)_linux_amd64.zip
    sudo mv terraform /usr/local/bin/
  displayName: 'Install Terraform'

- script: |
    echo "Initializing Terraform..."
    terraform init -backend-config="storage_account_name=tfstateuvqbm" -backend-config="container_name=tfstate" -backend-config="access_key=$(StorageAccountAccessKey)" -backend-config="key=terraform.tfstate"
  displayName: 'Terraform Init'

- script: |
    echo "Validating Terraform files..."
    terraform validate
  displayName: 'Terraform Validate'

- script: |
    echo "Applying Terraform changes directly..."
    terraform apply -auto-approve \
      -var "subscription_id=$(subscription_id)" \
      -var "client_id=$(client_id)" \
      -var "client_secret=$(client_secret)" \
      -var "tenant_id=$(tenant_id)" \
      -var "sql_server_login=$(sql_server_login)" \
      -var "sql_server_password=$(sql_server_password)"
  displayName: 'Terraform Apply'

  env:
    ARM_SUBSCRIPTION_ID: $(subscription_id)
    ARM_CLIENT_ID: $(client_id)
    ARM_CLIENT_SECRET: $(client_secret)
    ARM_TENANT_ID: $(tenant_id)